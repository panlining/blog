<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[彼得潘]]></title>
  <link href="afun.me/atom.xml" rel="self"/>
  <link href="afun.me/"/>
  <updated>2016-05-01T14:16:59+08:00</updated>
  <id>afun.me/</id>
  <author>
    <name><![CDATA[]]></name>
    
  </author>
  <generator uri="http://www.coderforart.com/">CoderForArt</generator>

  
  <entry>
    <title type="html"><![CDATA[Shell基础]]></title>
    <link href="afun.me/14623701400299.html"/>
    <updated>2016-05-04T21:55:40+08:00</updated>
    <id>afun.me/14623701400299.html</id>
    <content type="html"><![CDATA[
<blockquote>
<p>我们敲的命令都是英文字母，即ASCII字符</p>

<p>Shell是一个命令行解释器，它为用户提供了一个向Linux内核发送请求以便运行程序的界面系统级程序，用户可以用Shell来启动、挂起、停止甚至是编写一些程序。<br/>
Shell还是一个功能相当强大的编程语言，易编写，易调试，灵活性较强。Shell是解释执行的脚本语言，在Shell中可以直接调用Linux系统命令。</p>
</blockquote>

<h3 id="toc_0">第一个Shell脚本</h3>

<pre><code>vim hello.sh

// 写入以下内容
#!/bin/bash
# this is first program

echo -e &quot;hello world&quot;

然后可以直接执行bash hello.sh命令就可以输出

当然也可以执行chmod 755 hello.sh命令将文件设置为可执行文件再执行./hello.sh命令来执行文件
</code></pre>

<h3 id="toc_1">Bash的基本功能</h3>

<p>别名 - 命令的别名<br/>
执行alias命令<br/>
alias cp=&#39;cp -i&#39;<br/>
alias l.=&#39;ls -d .* --color=auto&#39;<br/>
alias ll=&#39;ls -l --color=auto&#39;<br/>
alias ls=&#39;ls --color=auto&#39;<br/>
alias mv=&#39;mv -i&#39;<br/>
alias rm=&#39;rm -i&#39;<br/>
alias which=&#39;alias | /usr/bin/which --tty-only --read-alias --show-dot --show-tilde&#39;<br/>
就可以查询出系统当前默认生效的别名<br/>
如：执行ls命令，实际上执行的是ls --color=auto命令</p>

<p>如果想要设置别名，按照以下格式输入命令<br/>
alias ls=&#39;ls --color=never&#39;</p>

<h3 id="toc_2">输出重定向</h3>

<blockquote>
<p>把本来应该输出到屏幕上的内容保存到文件当中或别的位置<br/>
只要执行的命令有输出内容就可以重定向输出，如ls命令</p>
</blockquote>

<pre><code>ls &gt; dir.log
// 将ls的执行结果输出到dir.log文件中，若dir.log文件不存在，则创建文件
// 这个命令每次执行会覆盖原文件中的内容

ls &gt;&gt; dir.log
// 这个命令会在文件最后追加写入执行结果，而不是覆盖原文件

lsc 2&gt;&gt;dir.log
// 如果命令不存在或者其他原因导致命令执行错误，想要把这种报错信息写入文件中，则在&gt;&gt;号前面加2，注意写入错误信息的时候&gt;&gt;号左右两侧不能有空格
</code></pre>

<p>如果想要将正确信息和错误信息都输出到文件中：</p>

<p><img src="media/14623701400299/655E4B0D-47A2-4E1F-8834-7714F3D16301.png" alt="655E4B0D-47A2-4E1F-8834-7714F3D16301"/></p>

<h3 id="toc_3">输入重定向</h3>

<p>wc [选项][文件名]（该文件用来统计输入的字符）<br/>
-c 统计字节数<br/>
-w 统计单词书<br/>
-l 统计行书</p>

<p>命令 &lt; 文件名<br/>
这个命令是把输入源重定向为文件（即获取文件内容作为输入的内容来用）</p>

<h3 id="toc_4">管道符</h3>

<p>学习管道符之前先要了解<br/>
<img src="media/14623701400299/CB22B4B2-F7D9-420A-9154-7BC66C45F1D3.png" alt="CB22B4B2-F7D9-420A-9154-7BC66C45F1D3"/></p>

<p>管道符：命令1 | 命令2<br/>
命令1的正确输出作为命令2的操作对象</p>

<pre><code>more 文件名
// 用来分屏显示文件内容

// 如果我们要执行ls -l命令，但是目录下文件超级多，那么就不是很好查看，这里就可以用到管道符
ls -l | more
// 将ls -l的执行输出结果作为命令more的操作对象


</code></pre>

<pre><code>netstat -an
// 查看系统当中所有的网络连接

netstat -an | grep LISTEN
// 查看系统中监听的端口

netstat -an | grep LISTEN | wc -l
// 统计系统中监听的端口的个数
</code></pre>

<h3 id="toc_5">通配符</h3>

<p><img src="media/14623701400299/BAC72DC7-2D09-4F5C-9DC0-2C293860755F.png" alt="BAC72DC7-2D09-4F5C-9DC0-2C293860755F"/></p>

<pre><code>ls 1.sql
// 列出1.sql文件

ls 1.sql*
// 列出以1.sql开头的所有文件

ls 1.sql?
// 列出以1.sql开头并且后面跟了一个任意字符的文件

ls 1.sql[0-9]
// 列出以1.sql开头并且后面跟了任意一个数字的文件

ls 1.sql[^0-9]
// 列出以1.sql开头并且后面跟了一个非数字的文件

// 通配符主要用来匹配文件名或者目录名称
</code></pre>

<h3 id="toc_6">Bash中的其他特殊符号</h3>

<p><img src="media/14623701400299/389AB0F2-5829-4004-9402-09C48EF0F565.png" alt="389AB0F2-5829-4004-9402-09C48EF0F565"/></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[压缩与解压缩命令]]></title>
    <link href="afun.me/14620832968215.html"/>
    <updated>2016-05-01T14:14:56+08:00</updated>
    <id>afun.me/14620832968215.html</id>
    <content type="html"><![CDATA[
<p>.rar与.zip相比，.rar压缩比更高，压缩速度更快</p>

<p>常见的压缩格式：.zip .gz .bz2 .tar.gz .tar.bz2</p>

<h3 id="toc_0">zip</h3>

<pre><code>压缩文件
zip 压缩之后的文件名        源文件
如：zip database.zip database.sql

压缩目录
zip -r 压缩之后的目录名 源目录


解压缩
unzip 文件名
</code></pre>

<h3 id="toc_1">gzip</h3>

<pre><code>压缩文件
gzip 原文件名
（gzip压缩之后原文件会消失）

如果需要压缩并且不删除源文件
gzip -c 源文件 &gt; 压缩文件
&gt; 号是将左侧的执行结果输入到右侧

压缩目录
gzip -r 
（压缩目录之后会发现压缩的是目录里面的子文件）

解压缩有两种方式
gzip -d 压缩文件
gunzip 压缩文件

解压目录加-r
</code></pre>

<h3 id="toc_2">bzip2</h3>

<pre><code>压缩文件
bzip2 源文件（压缩之后不保留源文件，需要保留源文件需要加-k）

解压缩
bzip -d 压缩文件
bunzip 压缩文件
（这两个命令也都是不保留源文件，如果需要则要加-k）

bzip命令不支持操作目录
</code></pre>

<h3 id="toc_3">tar</h3>

<pre><code>打包命令
tar -cvf 打包文件名 源文件
选项
        -c      打包
        -v      显示过程
        -f      指定打包后的文件名
        -x      解打包
如：tar -cvf database.tar database.sql
---
gzip和bzip2命令对目录操作都不是很好，就可以使用tar先将目录打包，然后再压缩


解打包

</code></pre>

<pre><code>tar还支持更简单的方法，直接打包目录然后压缩
tar -zcvf 压缩包名.tar.gz 源文件
选项  -z      压缩为.tar.gz格式
---
tar -zxvf 压缩包名.tar.gz
选项  -x  解压缩.tar.gz格式


tar -jcvf 压缩包名.tar.gz 源文件
选项  -z      压缩为.tar.bz2格式

tar -jxvf 压缩包名.tar.gz
选项

</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[文件搜索命令]]></title>
    <link href="afun.me/14617697782186.html"/>
    <updated>2016-04-27T23:09:38+08:00</updated>
    <id>afun.me/14617697782186.html</id>
    <content type="html"><![CDATA[
<h3 id="toc_0">locate搜索</h3>

<p>该命令用来快速匹配文件名包含123的文件<br/>
用来搜索/var/lib/mlocate数据库，这个数据库存储所有文件的信息<br/>
但是这个数据库不是实时更新的（每天一更新）<br/>
所以如果想要实时更新，可以执行updatedb命令来更新数据库，然后用locate搜索<br/>
在这里需要指出的是，locate是按照/etc/updatedb.conf配置文件来搜索的，这个文件里记录了一些搜索的规则</p>

<pre><code>// 开启搜索限制，改为no则为不开启搜索限制
PRUNE_BIND_MOUNTS = &quot;yes&quot;

// 搜索时，不搜索的文件系统
PRUNEFS =

// 搜索时，不搜索的文件类型
PRUNENAMES = 

// 搜索时，不搜索的目录
PRUNEPATHS = 

</code></pre>

<h3 id="toc_1">命令搜索命令whereis和which</h3>

<p>whereis 用来搜索命令<br/>
如：whereis ls</p>

<p>与之类似的命令还有：whoami(用来查看当前账号的用户名),whatis(用来查看命令的作用)</p>

<p>which 除了搜索命令的位置，还会搜索命令别名的位置</p>

<h3 id="toc_2">PATH环境变量</h3>

<p>在linux中，执行一个命令，只有一种方法，就是用命令的绝对路径，如：/bin/ls<br/>
但是这样很不方便，系统就为我们开发出来一个环境变量</p>

<pre><code>// 终端中输入 echo $PATH会出现以下目录，中间用冒号分割，这些目录是用来在我们执行一个命令时（不带绝对路径），系统会挨着这些目录查找这个命令，如果在某一个目录中找到了命令，那就会执行之，如果都没找到，则会报 command not found（命令未找到）
MacBook:~ lining$ echo $PATH
/usr/local/bin:/usr/local/sbib:/usr/local/opt/php56/sbin:/usr/local/opt/php56/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin
</code></pre>

<p>whereis和which搜索以来PATH环境变量提供的目录</p>

<h3 id="toc_3">find命令</h3>

<p>find是一个非常强大的搜索命令<br/>
命令格式：find [搜索范围] [搜索条件]<br/>
如：find / -name install.log（在根目录下按文件名搜索install.log文件）</p>

<p>find命令也可以实现模糊匹配查询，模糊匹配查询时需要使用通配符匹配，通配符是完全匹配。<br/>
如：<br/>
MacBook:~ lining$ sudo find / -name <q>nginx.conf</q><br/>
/usr/local/etc/nginx/nginx.conf</p>

<p>MacBook:~ lining$ sudo find / -name <q>nginx.conf*</q><br/>
/usr/local/etc/nginx/nginx.conf<br/>
/usr/local/etc/nginx/nginx.conf.default</p>

<p>find / -name <q>ab[cd]</q><br/>
搜索文件名为abc或者abd的文件</p>

<p>find / -name <q>*[cd]</q><br/>
搜索文件名以c或者d结尾的文件</p>

<pre><code>linux中的通配符
*       匹配任意内容
?       匹配任意一个字符
[]      匹配任意一个中括号内的字符


</code></pre>

<h4 id="toc_4">- 不区分大小写搜索</h4>

<p>find / -iname filename</p>

<h4 id="toc_5">- 按所有者搜索</h4>

<p>find / -user root<br/>
find / -nouser<br/>
搜索没有所有者的文件</p>

<h4 id="toc_6">- 按修改时间搜</h4>

<p>find /var/log/ -mtime +10<br/>
搜索10天前修改的文件</p>

<p>-10 10天内修改的文件<br/>
10      10天当天修改的文件<br/>
+10 10天前修改的文件</p>

<p>atime       文件访问时间<br/>
ctime       修改文件属性<br/>
mtime       修改文件内容</p>

<h4 id="toc_7">- 按文件大小搜索</h4>

<p>find /etc -size +20M<br/>
find /etc -size 25k<br/>
find /etc -size -30M<br/>
find /etc -size 25（这样写是说搜索25个512k字节）<br/>
（注意兆字节要用大写M，千字节要用小写k）</p>

<h4 id="toc_8">- 安装i节点搜索</h4>

<p>find / -inum 23947</p>

<h4 id="toc_9">- 多条件查询</h4>

<p>find /etc -size +20k -a -size -50k<br/>
（查找大于20k且小于50k的文件）</p>

<p>如果想查看搜索结果的详细信息<br/>
find /etc -size +20k -a -size -50k -exec ls -l {} \;<br/>
-exec/-ok 命令 {} \;对搜索结果执行操作</p>

<h3 id="toc_10">grep命令</h3>

<p>grep [选项] 字符串 文件名<br/>
在文件中匹配符合条件的字符串<br/>
选项：<br/>
-i      忽略大小写<br/>
-v      排除指定字符串</p>

<h3 id="toc_11">find和grep的区别</h3>

<p>find命令：在系统中搜索符合条件的文件名，如果需要匹配，使用通配符匹配，通配符是完全匹配。<br/>
grep命令：在文件当中搜索符合条件的字符串，如果需要匹配，使用正则表达式匹配，正则表达式是包含匹配</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[文件处理命令]]></title>
    <link href="afun.me/14617693694457.html"/>
    <updated>2016-04-27T23:02:49+08:00</updated>
    <id>afun.me/14617693694457.html</id>
    <content type="html"><![CDATA[
<h3 id="toc_0">目录处理命令</h3>

<pre><code># 建立目录
mkdir
-p  递归创建

# 删除目录
rmdir（remove empty directiries)
该命令只能删除空白目录

# 删除文件或目录
rm（remove）
直接使用时删除文件
-r  删除目录
-f 强制删除（省略确认删除的步骤）

# 复制命令
cp(copy)
-r  复制目录
-p  连带文件属性复制
-d  若源文件是链接文件，则复制链接属性
-a  相当于-pdr

cp we.ht japan/fw（复制we.ht文件到japan/fw目录）

# 剪切命令
mv(move)
* 这个命令不管是用来操作文件还是操作目录，都不需要加-r
* 并且这个命令也可以用来修改文件（目录）名称


# 切换目录（change directory）
cd
/   进入根目录
~   进入家目录
-   进入上次进入的目录

# 链接命令
链接分为软连接和硬链接
ln
-s  创建软连接


硬链接拥有相同的i节点和存储block块，可以看做是同一个文件，可以通过i节点识别，不能跨分区，不能针对目录使用

软链接类似win的快捷方式，拥有自己的i节点和block块，但是数据块中只保存原文件的文件名和i节点号，并没有实际的文件数据


创建软连接
ln -s /root/123 /tmp 
* 软连接原文件必须写绝对路径



</code></pre>

<hr/>

<p>相对路径：参照当前所在目录进行查找<br/>
绝对路径：从根目录开始查找</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MWeb - Pro Markdown writing, note taking and static blog generator App]]></title>
    <link href="afun.me/14269481407962.html"/>
    <updated>2015-03-21T22:29:00+08:00</updated>
    <id>afun.me/14269481407962.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">Pro Markdown writing</h2>

<ul>
<li>Minimal UI, Dark Mode, optimized lists indent,five editor themes. </li>
<li>Markdown syntax and massive Markdown extensions Supported: Table, TOC, MathJax, Fenced code block and code syntax highlight, Task lists, Sequence &amp; Flow chart, Footnote and more.</li>
<li>Typewriter Scrolling: <code>View</code> - <code>Typewriter Scrolling</code></li>
<li>Publish/Update to Wordpress, Metaweblog API services, Wordpress.com, Evernote, 印象笔记, Blogger,  Tumblr. <code>Preferences</code> -   <code>Publishing</code> to add publishing services. Click top-right corner <code>Share Button</code> for publishing.</li>
<li>Support six live preview themes. Easy to custom preview theme. All themes can export to HTML or PDF. To open live preview window, please press <code>CMD + R</code> or <code>CMD + 4</code>. </li>
<li>Support Outline view.</li>
</ul>

<h2 id="toc_1">External Mode and Library Mode</h2>

<ol>
<li>External Mode (CMD + E): This mode design for create, open external Markdown document. You can add external folder to this mode.</li>
<li>Library Mode (CMD + L): This mode design for note taking and static blog/website generator. </li>
</ol>

<p>Shortcuts <code>CMD + E</code> or <code>View</code> - <code>Open External</code> to open External Mode.</p>

<p>Shortcuts <code>CMD + L</code> or <code>View</code> - <code>Open Library</code> to open Library Mode.</p>

<p>External&#39;s folder and Library documents are supported <strong>Full Text Search</strong>, drag &amp; drop or paste photos to the editor and display. <code>CMD + V</code> paste to JPG pictrue, <code>CMD + Shift + V</code> paste to PNG pictrue.</p>

<h2 id="toc_2">Library Mode for note taking</h2>

<p>Library Mode use categories tree to organize documents, support drag &amp; drop or paste insert pictrue and display immediately. Support import external Markdown or txt document to the library, export a category or documents to HTML, PDF or Markdown.</p>

<p>More info, please check this post: <a href="http://www.mweb.im/mweb-document-library.html">Introducing documents library</a></p>

<h2 id="toc_3">Library Mode for static blog generator</h2>

<p>You can build static blog <strong>One Click</strong>! Now has two blog themes, it&#39;s easy to custom you owner blog theme. you can add <a href="http://www.addthis.com/">AddThis</a> and <a href="http://www.disqus.com">Disqus</a> code for share and comment support to you blog. You can enable MathJax and Sequence &amp; Flow chart support in category setting.</p>

<p>More info, please check this post: <a href="http://www.mweb.im/mweb-static-blog-generator.html">Introducing static blog generator</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Markdown syntax guide and writing on MWeb]]></title>
    <link href="afun.me/14269481403147.html"/>
    <updated>2015-03-21T22:29:00+08:00</updated>
    <id>afun.me/14269481403147.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">Philosophy</h2>

<blockquote>
<p>Markdown is intended to be as easy-to-read and easy-to-write as is feasible.<br/>
Readability, however, is emphasized above all else. A Markdown-formatted document should be publishable as-is, as plain text, without looking like it&#39;s been marked up with tags or formatting instructions.<br/>
Markdown&#39;s syntax is intended for one purpose: to be used as a format for <em>writing</em> for the web.</p>
</blockquote>

<span id="more"></span><!-- more -->

<h2 id="toc_1">Notice</h2>

<p>You can use  <code>CMD + R</code> to preview the result.</p>

<h2 id="toc_2">Headers</h2>

<p><strong>Example:</strong></p>

<pre><code># This is an `&lt;h1&gt;` tag
## This is an `&lt;h2&gt;` tag
###### This is an `&lt;h6&gt;` tag
</code></pre>

<p><strong>Result:</strong></p>

<h1 id="toc_3">This is an <code>&lt;h1&gt;</code> tag</h1>

<h2 id="toc_4">This is an <code>&lt;h2&gt;</code> tag</h2>

<h6 id="toc_5">This is an <code>&lt;h6&gt;</code> tag</h6>

<h2 id="toc_6">Emphasis</h2>

<p><strong>Example:</strong></p>

<pre><code>*This text will be italic*
_This will also be italic_

**This text will be bold**
__This will also be bold__

*You **can** combine them*
</code></pre>

<p><strong>Shortcuts:</strong>  <code>CMD + U</code>、<code>CMD + I</code>、<code>CMD + B</code><br/>
<strong>Result:</strong></p>

<p><em>This text will be italic</em><br/>
<u>This will also be italic</u></p>

<p><strong>This text will be bold</strong><br/>
<strong>This will also be bold</strong></p>

<p>*You <strong>can</strong> combine them*</p>

<h2 id="toc_7">Newlines</h2>

<p>End a line with two or more spaces + enter.<br/>
Just typing enter to newline,please set：<code>Preferences</code> - <code>Themes</code> - <code>Translate newlines to &lt;br&gt; tags</code>  enable ( default is enable )</p>

<h2 id="toc_8">Lists</h2>

<h3 id="toc_9">Unordered</h3>

<p><strong>Example:</strong></p>

<pre><code>* Item 1 unordered list `* + SPACE`
* Item 2
    * Item 2a unordered list `TAB + * + SPACE`
    * Item 2b
</code></pre>

<p><strong>Shortcuts:</strong>  <code>Option + U</code><br/>
<strong>Result:</strong></p>

<ul>
<li>Item 1 unordered list <code>* + SPACE</code></li>
<li>Item 2

<ul>
<li>Item 2a unordered list <code>TAB + * + SPACE</code></li>
<li>Item 2b</li>
</ul></li>
</ul>

<h3 id="toc_10">Ordered</h3>

<p><strong>Example:</strong></p>

<pre><code>1. Item 1 ordered list `Number + . + SPACE`
2. Item 2 
3. Item 3
    1. Item 3a ordered list `TAB + Number + . + SPACE`
    2. Item 3b
</code></pre>

<p><strong>Result:</strong></p>

<ol>
<li>Item 1 ordered list <code>Number + . + SPACE</code></li>
<li>Item 2 </li>
<li>Item 3

<ol>
<li>Item 3a ordered list <code>TAB + Number + . + SPACE</code></li>
<li>Item 3b</li>
</ol></li>
</ol>

<h3 id="toc_11">Task lists</h3>

<p><strong>Example:</strong></p>

<pre><code>- [ ] task one not finish `- + SPACE + [ ]`
- [x] task two finished `- + SPACE + [x]`
</code></pre>

<p><strong>Result:</strong></p>

<ul>
<li class="task-list-item"><input type="checkbox" /> task one not finish <code>- + SPACE + [ ]</code>
</li>
<li class="task-list-item"><input type="checkbox" checked /> task two finished <code>- + SPACE + [x]</code>
</li>
</ul>

<h2 id="toc_12">Images</h2>

<p><strong>Example:</strong></p>

<pre><code>![GitHub set up](https://help.github.com/assets/images/site/set-up-git.gif)
Format: ![Alt Text](url)
</code></pre>

<p><strong>Shortcuts:</strong>  <code>Control + Shift + I</code><br/>
The Library&#39;s document support drag &amp; drop or <code>CMD + V</code> paste or <code>CMD + Option + I</code> to insert  the pictrue.<br/>
<strong>Result:</strong></p>

<p><img src="https://help.github.com/assets/images/site/set-up-git.gif" alt="GitHub set up"/></p>

<h2 id="toc_13">Links</h2>

<p><strong>Example:</strong></p>

<pre><code>email &lt;example@example.com&gt;
[GitHub](http://github.com)
autolink  &lt;http://www.github.com/&gt;
</code></pre>

<p><strong>Shortcuts:</strong>  <code>Control + Shift + L</code><br/>
The Library&#39;s document support drag &amp; drop or <code>CMD + Option + I</code> to insert attachment.<br/>
<strong>Result:</strong></p>

<p>An email <a href="mailto:example@example.com">example@example.com</a> link.<br/>
<a href="http://github.com">GitHub</a><br/>
Automatic linking for URLs<br/>
Any URL (like <a href="http://www.github.com/">http://www.github.com/</a>) will be automatically converted into a clickable link.</p>

<h2 id="toc_14">Blockquotes</h2>

<p><strong>Example:</strong></p>

<pre><code>As Kanye West said:
&gt; We&#39;re living the future so
&gt; the present is our past.
</code></pre>

<p><strong>Shortcuts:</strong>  <code>CMD + Shift + B</code><br/>
<strong>Result:</strong></p>

<p>As Kanye West said:</p>

<blockquote>
<p>We&#39;re living the future so<br/>
the present is our past.</p>
</blockquote>

<h2 id="toc_15">Inline code</h2>

<p><strong>Example:</strong></p>

<pre><code>I think you should use an
`&lt;addr&gt;` `code` element here instead.
</code></pre>

<p><strong>Shortcuts:</strong>  <code>CMD + K</code><br/>
<strong>Result:</strong></p>

<p>I think you should use an<br/>
<code>&lt;addr&gt;</code> <code>code</code> element here instead.</p>

<h2 id="toc_16">Multi-line code</h2>

<p><strong>Example:</strong></p>

<pre><code>```js
function fancyAlert(arg) {
  if(arg) {
    $.facebox({div:&#39;#foo&#39;})
  }

}
```
</code></pre>

<p><strong>Shortcuts:</strong>  <code>CMD + Shift + K</code><br/>
<strong>Result:</strong></p>

<pre><code class="language-js">function fancyAlert(arg) {
  if(arg) {
    $.facebox({div:&#39;#foo&#39;})
  }

}
</code></pre>

<h2 id="toc_17">Sequence and Flow chart</h2>

<p><strong>Example:</strong></p>

<pre><code>```sequence
张三-&gt;李四: 嘿，小四儿, 写博客了没?
Note right of 李四: 李四愣了一下，说：
李四--&gt;张三: 忙得吐血，哪有时间写。
```

```flow
st=&gt;start: 开始
e=&gt;end: 结束
op=&gt;operation: 我的操作
cond=&gt;condition: 确认？

st-&gt;op-&gt;cond
cond(yes)-&gt;e
cond(no)-&gt;op
```
</code></pre>

<p><strong>Result:</strong> ( Please enable  <code>Preferences</code> - <code>Themes</code> - <code>Enable sequence &amp; flow chart</code>, default is enable. )</p>

<pre><code class="language-sequence">张三-&gt;李四: 嘿，小四儿, 写博客了没?
Note right of 李四: 李四愣了一下，说：
李四--&gt;张三: 忙得吐血，哪有时间写。
</code></pre>

<pre><code class="language-flow">st=&gt;start: 开始
e=&gt;end: 结束
op=&gt;operation: 我的操作
cond=&gt;condition: 确认？

st-&gt;op-&gt;cond
cond(yes)-&gt;e
cond(no)-&gt;op
</code></pre>

<p>More info: <a href="http://bramp.github.io/js-sequence-diagrams/">http://bramp.github.io/js-sequence-diagrams/</a>, <a href="http://adrai.github.io/flowchart.js/">http://adrai.github.io/flowchart.js/</a></p>

<h2 id="toc_18">Tables</h2>

<p><strong>Example:</strong></p>

<pre><code>First Header | Second Header
------------ | -------------
Content from cell 1 | Content from cell 2
Content in the first column | Content in the second column
</code></pre>

<p>You can create tables by assembling a list of words and dividing them with hyphens - (for the first row), and then separating each column with a pipe |:</p>

<p><strong>Result:</strong></p>

<table>
<thead>
<tr>
<th>First Header</th>
<th>Second Header</th>
</tr>
</thead>

<tbody>
<tr>
<td>Content from cell 1</td>
<td>Content from cell 2</td>
</tr>
<tr>
<td>Content in the first column</td>
<td>Content in the second column</td>
</tr>
</tbody>
</table>

<h2 id="toc_19">Strikethrough</h2>

<p><strong>Example:</strong></p>

<pre><code> (like ~~this~~)
</code></pre>

<p><strong>Result:</strong></p>

<p>Any word wrapped with two tildes (like <del>this</del>) will appear crossed out.</p>

<h2 id="toc_20">Horizontal Rules</h2>

<p>Following lines will produce a horizontal rule:</p>

<pre><code>***

*****

- - -
</code></pre>

<p><strong>Result:</strong></p>

<hr/>

<hr/>

<hr/>

<h2 id="toc_21">MathJax</h2>

<p>Use double US dollors sign pair for Block level Math formula, and one US dollor sign pair for Inline Level.</p>

<pre><code>For example this is a Block level $$x = {-b \pm \sqrt{b^2-4ac} \over 2a}$$ formula, and this is an inline Level $x = {-b \pm \sqrt{b^2-4ac} \over 2a}$ formula.

\\[ \frac{1}{\Bigl(\sqrt{\phi \sqrt{5}}-\phi\Bigr) e^{\frac25 \pi}} =
1+\frac{e^{-2\pi}} {1+\frac{e^{-4\pi}} {1+\frac{e^{-6\pi}}
{1+\frac{e^{-8\pi}} {1+\ldots} } } } \\]

</code></pre>

<p><strong>Result:</strong></p>

<p>For example this is a Block level \[x = {-b \pm \sqrt{b^2-4ac} \over 2a}\] formula, and this is an inline Level \(x = {-b \pm \sqrt{b^2-4ac} \over 2a}\) formula.</p>

<p>\[ \frac{1}{\Bigl(\sqrt{\phi \sqrt{5}}-\phi\Bigr) e^{\frac25 \pi}} =<br/>
1+\frac{e^{-2\pi}} {1+\frac{e^{-4\pi}} {1+\frac{e^{-6\pi}}<br/>
{1+\frac{e^{-8\pi}} {1+\ldots} } } } \]</p>

<h2 id="toc_22">Footnote</h2>

<p><strong>Example:</strong></p>

<pre><code>This is a footnote:[^sample_footnote]
</code></pre>

<p><strong>Result:</strong></p>

<p>This is a footnote:<sup id="fnref1"><a href="#fn1" rel="footnote">1</a></sup></p>

<h2 id="toc_23">Comment And Read More..</h2>

<!-- comment -->

<!-- more -->

<p>Actions-&gt;Insert Read More Comment <em>OR</em> <code>CMD + .</code></p>

<h2 id="toc_24">TOC</h2>

<p><strong>Example:</strong></p>

<pre><code>[TOC]
</code></pre>

<p><strong>Result:</strong></p>

<ul>
<li>
<a href="#toc_0">Philosophy</a>
</li>
<li>
<a href="#toc_1">Notice</a>
</li>
<li>
<a href="#toc_2">Headers</a>
</li>
</ul>
</li>
<li>
<a href="#toc_3">This is an <code>&lt;h1&gt;</code> tag</a>
<ul>
<li>
<a href="#toc_4">This is an <code>&lt;h2&gt;</code> tag</a>
<ul>
<li>
<ul>
<li>
<ul>
<li>
<ul>
<li>
<a href="#toc_5">This is an <code>&lt;h6&gt;</code> tag</a>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>
<a href="#toc_6">Emphasis</a>
</li>
<li>
<a href="#toc_7">Newlines</a>
</li>
<li>
<a href="#toc_8">Lists</a>
<ul>
<li>
<a href="#toc_9">Unordered</a>
</li>
<li>
<a href="#toc_10">Ordered</a>
</li>
<li>
<a href="#toc_11">Task lists</a>
</li>
</ul>
</li>
<li>
<a href="#toc_12">Images</a>
</li>
<li>
<a href="#toc_13">Links</a>
</li>
<li>
<a href="#toc_14">Blockquotes</a>
</li>
<li>
<a href="#toc_15">Inline code</a>
</li>
<li>
<a href="#toc_16">Multi-line code</a>
</li>
<li>
<a href="#toc_17">Sequence and Flow chart</a>
</li>
<li>
<a href="#toc_18">Tables</a>
</li>
<li>
<a href="#toc_19">Strikethrough</a>
</li>
<li>
<a href="#toc_20">Horizontal Rules</a>
</li>
<li>
<a href="#toc_21">MathJax</a>
</li>
<li>
<a href="#toc_22">Footnote</a>
</li>
<li>
<a href="#toc_23">Comment And Read More..</a>
</li>
<li>
<a href="#toc_24">TOC</a>
</li>
</ul>


<div class="footnotes">
<hr/>
<ol>

<li id="fn1">
<p>footnote text detail...&nbsp;<a href="#fnref1" rev="footnote">&#8617;</a></p>
</li>

</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MWeb - 专业的 Markdown 写作、记笔记、静态博客生成软件]]></title>
    <link href="afun.me/14269480090478.html"/>
    <updated>2015-03-21T22:26:49+08:00</updated>
    <id>afun.me/14269480090478.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">专业的 Markdown 写作支持</h2>

<ul>
<li>极简 UI、Dark Mode、漂亮的 Markdown 语法高亮、列表缩进优化，提供 5 种主题选择。</li>
<li>除了支持基本的 Markdown 语法外，还支持大量 Markdown 扩展语法：Table、TOC、MathJax、Fenced code block、任务列表（Task lists）、顺序图和流程图、Footnote 等。</li>
<li>支持 Typewriter Scrolling（打机滚动模式）<code>View</code> - <code>Typewriter Scrolling</code>。</li>
<li>支持发布和<strong>更新</strong>到：Wordrpess 博客、支持 Metaweblog API 的博客服务、Wordpress.com、Evernote 和印象笔记、Blogger、Tumblr。请在 <code>Preferences</code> - <code>Publishing</code> 增加发布服务，然后点击软件右上角的分享按钮即可看到所增加的发布服务。</li>
<li>支持即时预览并提供 6 种预览主题，其中二种和静态博客主题相对应，也就是说您在写博客时可以即时预览大概效果！所有主题效果都支持导出为 HTML、PDF。快捷键 <code>CMD + R</code> 或 <code>CMD + 4</code> 打开即时预览窗口。</li>
<li>编辑器和实时预览都支持大纲视图，长文档时跳转非常方便。</li>
</ul>

<h2 id="toc_1">设计为两种模式</h2>

<ul>
<li>外部文档模式：用于新建、打开和编辑外部 Markdown 文档。也支持引入外部文件夹到 MWeb 中管理。</li>
<li>文档库模式：用分类树管理文档，可以把文档设为多个分类，用于记笔记和静态网站生成。</li>
</ul>

<p><code>CMD + E</code> 或使用菜单 <code>View</code> - <code>Open External</code> 可打开外部文档模式。</p>

<p><code>CMD + L</code> 或使用菜单 <code>View</code> - <code>Open Library</code> 可打开文档库。</p>

<p>文档库模式和外部模式都支持<strong>全文搜寻（Full Text Search）</strong>，都可以用拖放或粘贴插入图片并直接显示。<code>CMD + V</code> 粘贴为JPG格式，<code>CMD + Shift + V</code> 粘贴为PNG透明格式。</p>

<p>外部模式引入 Octpress、Jekyll 等静态博客的文件夹后也支持拖放或粘贴插入图片和实时预览，详细请参考：<a href="http://zh.mweb.im/mweb-1.4-add-floder-octpress-support.html">引入文件夹到 MWeb 中管理，支持 Octpress、Jekyll 等静态博客拖拽插入图片和实时预览</a></p>

<h2 id="toc_2">文档库模式用于记笔记</h2>

<p>文档库模式使用分类树组织和管理文档，支持拖放或粘贴插入图片并直接显示，插入非图片则会生成连结。<br/>
支持把 Markdown 或文本文档导入到文档库，也支持把整个分类或者文档（可选多个）导出为 HTML、PDF、Markdown。</p>

<p>更详细的信息请看：<a href="http://zh.mweb.im/mweb-document-library.html">MWeb 文档库模式详细说明</a></p>

<h2 id="toc_3">文档库模式用于静态博客生成</h2>

<p>一键把分类生成静态博客，目前可选二个主题，支持自定主题。只要填入 Disqus、多说提供的代码即可以为博客增加评论功能。可勾选让网站支持 MathJax 和顺序图、流程图。</p>

<p>更详细的信息请看：<a href="http://zh.mweb.im/mweb-static-blog-generator.html">MWeb 生成静态博客详细说明</a>、<a href="http://zh.mweb.im/mweb-1.4-static-blog-extension.html">静态博客功能增强</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Markdown 语法和 MWeb 写作使用说明]]></title>
    <link href="afun.me/14269478334488.html"/>
    <updated>2015-03-21T22:23:53+08:00</updated>
    <id>afun.me/14269478334488.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">Markdown 的设计哲学</h2>

<blockquote>
<p>Markdown 的目標是實現「易讀易寫」。<br/>
不過最需要強調的便是它的可讀性。一份使用 Markdown 格式撰寫的文件應該可以直接以純文字發佈，並且看起來不會像是由許多標籤或是格式指令所構成。<br/>
Markdown 的語法有個主要的目的：用來作為一種網路內容的<em>寫作</em>用語言。</p>
</blockquote>

<span id="more"></span><!-- more -->

<h2 id="toc_1">本文约定</h2>

<p>如果有写 <code>效果如下：</code>， 在 MWeb 编辑状态下只有用 <code>CMD + R</code> 预览才可以看效果。</p>

<h2 id="toc_2">标题</h2>

<p>Markdown 语法：</p>

<pre><code># 第一级标题 `&lt;h1&gt;` 
## 第二级标题 `&lt;h2&gt;` 
###### 第六级标题 `&lt;h6&gt;` 
</code></pre>

<p>效果如下：</p>

<h1 id="toc_3">第一级标题 <code>&lt;h1&gt;</code></h1>

<h2 id="toc_4">第二级标题 <code>&lt;h2&gt;</code></h2>

<h6 id="toc_5">第六级标题 <code>&lt;h6&gt;</code></h6>

<h2 id="toc_6">强调</h2>

<p>Markdown 语法：</p>

<pre><code>*这些文字会生成`&lt;em&gt;`*
_这些文字会生成`&lt;u&gt;`_

**这些文字会生成`&lt;strong&gt;`**
__这些文字会生成`&lt;strong&gt;`__
</code></pre>

<p>在 MWeb 中的快捷键为： <code>CMD + U</code>、<code>CMD + I</code>、<code>CMD + B</code><br/>
效果如下：</p>

<p><em>这些文字会生成<code>&lt;em&gt;</code></em><br/>
<u>这些文字会生成<code>&lt;u&gt;</code></u></p>

<p><strong>这些文字会生成<code>&lt;strong&gt;</code></strong><br/>
<strong>这些文字会生成<code>&lt;strong&gt;</code></strong></p>

<h2 id="toc_7">换行</h2>

<p>四个及以上空格加回车。<br/>
如果不想打这么多空格，只要回车就为换行，请勾选：<code>Preferences</code> - <code>Themes</code> - <code>Translate newlines to &lt;br&gt; tags</code></p>

<h2 id="toc_8">列表</h2>

<h3 id="toc_9">无序列表</h3>

<p>Markdown 语法：</p>

<pre><code>* 项目一 无序列表 `* + 空格键`
* 项目二
    * 项目二的子项目一 无序列表 `TAB + * + 空格键`
    * 项目二的子项目二
</code></pre>

<p>在 MWeb 中的快捷键为： <code>Option + U</code><br/>
效果如下：</p>

<ul>
<li>项目一 无序列表 <code>* + 空格键</code></li>
<li>项目二

<ul>
<li>项目二的子项目一 无序列表 <code>TAB + * + 空格键</code></li>
<li>项目二的子项目二</li>
</ul></li>
</ul>

<h3 id="toc_10">有序列表</h3>

<p>Markdown 语法：</p>

<pre><code>1. 项目一 有序列表 `数字 + . + 空格键`
2. 项目二 
3. 项目三
    1. 项目三的子项目一 有序列表 `TAB + 数字 + . + 空格键`
    2. 项目三的子项目二
</code></pre>

<p>效果如下：</p>

<ol>
<li>项目一 有序列表 <code>数字 + . + 空格键</code></li>
<li>项目二 </li>
<li>项目三

<ol>
<li>项目三的子项目一 有序列表 <code>TAB + 数字 + . + 空格键</code></li>
<li>项目三的子项目二</li>
</ol></li>
</ol>

<h3 id="toc_11">任务列表（Task lists）</h3>

<p>Markdown 语法：</p>

<pre><code>- [ ] 任务一 未做任务 `- + 空格 + [ ]`
- [x] 任务二 已做任务 `- + 空格 + [x]`
</code></pre>

<p>效果如下：</p>

<ul>
<li class="task-list-item"><input type="checkbox" /> 任务一 未做任务 <code>- + 空格 + [ ]</code>
</li>
<li class="task-list-item"><input type="checkbox" checked /> 任务二 已做任务 <code>- + 空格 + [x]</code>
</li>
</ul>

<h2 id="toc_12">图片</h2>

<p>Markdown 语法：</p>

<pre><code>![GitHub set up](http://zh.mweb.im/asset/img/set-up-git.gif)
格式: ![Alt Text](url)
</code></pre>

<p><code>Control + Shift + I</code> 可插入Markdown语法。<br/>
如果是 MWeb 的文档库中的文档，还可以用拖放图片、<code>CMD + V</code> 粘贴、<code>CMD + Option + I</code> 导入这三种方式来增加图片。<br/>
效果如下：</p>

<p><img src="http://zh.mweb.im/asset/img/set-up-git.gif" alt="GitHub set up"/></p>

<h2 id="toc_13">链接</h2>

<p>Markdown 语法：</p>

<pre><code>email &lt;example@example.com&gt;
[GitHub](http://github.com)
自动生成连接  &lt;http://www.github.com/&gt;
</code></pre>

<p><code>Control + Shift + L</code> 可插入Markdown语法。<br/>
如果是 MWeb 的文档库中的文档，拖放或<code>CMD + Option + I</code> 导入非图片时，会生成连接。<br/>
效果如下：</p>

<p>Email 连接： <a href="mailto:example@example.com">example@example.com</a><br/>
<a href="http://github.com">连接标题Github网站</a><br/>
自动生成连接像： <a href="http://www.github.com/">http://www.github.com/</a> 这样</p>

<h2 id="toc_14">区块引用</h2>

<p>Markdown 语法：</p>

<pre><code>某某说:
&gt; 第一行引用
&gt; 第二行费用文字
</code></pre>

<p><code>CMD + Shift + B</code> 可插入Markdown语法。<br/>
效果如下：</p>

<p>某某说:</p>

<blockquote>
<p>第一行引用<br/>
第二行费用文字</p>
</blockquote>

<h2 id="toc_15">行内代码</h2>

<p>Markdown 语法：</p>

<pre><code>像这样即可：`&lt;addr&gt;` `code`
</code></pre>

<p><code>CMD + K</code> 可插入Markdown语法。<br/>
效果如下：</p>

<p>像这样即可：<code>&lt;addr&gt;</code> <code>code</code></p>

<h2 id="toc_16">多行或者一段代码</h2>

<p>Markdown 语法：</p>

<pre><code>```js
function fancyAlert(arg) {
  if(arg) {
    $.facebox({div:&#39;#foo&#39;})
  }

}
```
</code></pre>

<p><code>CMD + Shift + K</code> 可插入Markdown语法。<br/>
效果如下：</p>

<pre><code class="language-js">function fancyAlert(arg) {
    if(arg) {
        $.facebox({div:&#39;#foo&#39;})
    }
    
}
</code></pre>

<h2 id="toc_17">顺序图或流程图</h2>

<p>Markdown 语法：</p>

<pre><code>```sequence
张三-&gt;李四: 嘿，小四儿, 写博客了没?
Note right of 李四: 李四愣了一下，说：
李四--&gt;张三: 忙得吐血，哪有时间写。
```

```flow
st=&gt;start: 开始
e=&gt;end: 结束
op=&gt;operation: 我的操作
cond=&gt;condition: 确认？

st-&gt;op-&gt;cond
cond(yes)-&gt;e
cond(no)-&gt;op
```
</code></pre>

<p>效果如下（ <code>Preferences</code> - <code>Themes</code> - <code>Enable sequence &amp; flow chart</code> 才会看到效果 ）：</p>

<pre><code class="language-sequence">张三-&gt;李四: 嘿，小四儿, 写博客了没?
Note right of 李四: 李四愣了一下，说：
李四--&gt;张三: 忙得吐血，哪有时间写。
</code></pre>

<pre><code class="language-flow">st=&gt;start: 开始
e=&gt;end: 结束
op=&gt;operation: 我的操作
cond=&gt;condition: 确认？

st-&gt;op-&gt;cond
cond(yes)-&gt;e
cond(no)-&gt;op
</code></pre>

<p>更多请参考：<a href="http://bramp.github.io/js-sequence-diagrams/">http://bramp.github.io/js-sequence-diagrams/</a>, <a href="http://adrai.github.io/flowchart.js/">http://adrai.github.io/flowchart.js/</a></p>

<h2 id="toc_18">表格</h2>

<p>Markdown 语法：</p>

<pre><code>第一格表头 | 第二格表头
--------- | -------------
内容单元格 第一列第一格 | 内容单元格第二列第一格
内容单元格 第一列第二格 多加文字 | 内容单元格第二列第二格
</code></pre>

<p>效果如下：</p>

<table>
<thead>
<tr>
<th>第一格表头</th>
<th>第二格表头</th>
</tr>
</thead>

<tbody>
<tr>
<td>内容单元格 第一列第一格</td>
<td>内容单元格第二列第一格</td>
</tr>
<tr>
<td>内容单元格 第一列第二格 多加文字</td>
<td>内容单元格第二列第二格</td>
</tr>
</tbody>
</table>

<h2 id="toc_19">删除线</h2>

<p>Markdown 语法：</p>

<pre><code>加删除线像这样用： ~~删除这些~~
</code></pre>

<p>效果如下：</p>

<p>加删除线像这样用： <del>删除这些</del></p>

<h2 id="toc_20">分隔线</h2>

<p>以下三种方式都可以生成分隔线：</p>

<pre><code>***

*****

- - -
</code></pre>

<p>效果如下：</p>

<hr/>

<hr/>

<hr/>

<h2 id="toc_21">MathJax</h2>

<p>Markdown 语法：</p>

<pre><code>块级公式：
$$  x = \dfrac{-b \pm \sqrt{b^2 - 4ac}}{2a} $$

\\[ \frac{1}{\Bigl(\sqrt{\phi \sqrt{5}}-\phi\Bigr) e^{\frac25 \pi}} =
1+\frac{e^{-2\pi}} {1+\frac{e^{-4\pi}} {1+\frac{e^{-6\pi}}
{1+\frac{e^{-8\pi}} {1+\ldots} } } } \\]

行内公式： $\Gamma(n) = (n-1)!\quad\forall n\in\mathbb N$
</code></pre>

<p>效果如下（<code>Preferences</code> - <code>Themes</code> - <code>Enable MathJax</code> 才会看到效果）：</p>

<p>块级公式：<br/>
\[  x = \dfrac{-b \pm \sqrt{b^2 - 4ac}}{2a} \]</p>

<p>\[ \frac{1}{\Bigl(\sqrt{\phi \sqrt{5}}-\phi\Bigr) e^{\frac25 \pi}} =<br/>
1+\frac{e^{-2\pi}} {1+\frac{e^{-4\pi}} {1+\frac{e^{-6\pi}}<br/>
{1+\frac{e^{-8\pi}} {1+\ldots} } } } \]</p>

<p>行内公式： \(\Gamma(n) = (n-1)!\quad\forall n\in\mathbb N\)</p>

<h2 id="toc_22">脚注（Footnote）</h2>

<p>Markdown 语法：</p>

<pre><code>这是一个脚注：[^sample_footnote]
</code></pre>

<p>效果如下：</p>

<p>这是一个脚注：<sup id="fnref1"><a href="#fn1" rel="footnote">1</a></sup></p>

<h2 id="toc_23">注释和阅读更多</h2>

<!-- comment -->

<!-- more -->

<p>Actions-&gt;Insert Read More Comment <em>或者</em> <code>Command + .</code><br/>
<strong>注</strong> 阅读更多的功能只用在生成网站或博客时。</p>

<h2 id="toc_24">TOC</h2>

<p>Markdown 语法：</p>

<pre><code>[TOC]
</code></pre>

<p>效果如下：</p>

<ul>
<li>
<a href="#toc_0">Markdown 的设计哲学</a>
</li>
<li>
<a href="#toc_1">本文约定</a>
</li>
<li>
<a href="#toc_2">标题</a>
</li>
</ul>
</li>
<li>
<a href="#toc_3">第一级标题 <code>&lt;h1&gt;</code></a>
<ul>
<li>
<a href="#toc_4">第二级标题 <code>&lt;h2&gt;</code></a>
<ul>
<li>
<ul>
<li>
<ul>
<li>
<ul>
<li>
<a href="#toc_5">第六级标题 <code>&lt;h6&gt;</code></a>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>
<a href="#toc_6">强调</a>
</li>
<li>
<a href="#toc_7">换行</a>
</li>
<li>
<a href="#toc_8">列表</a>
<ul>
<li>
<a href="#toc_9">无序列表</a>
</li>
<li>
<a href="#toc_10">有序列表</a>
</li>
<li>
<a href="#toc_11">任务列表（Task lists）</a>
</li>
</ul>
</li>
<li>
<a href="#toc_12">图片</a>
</li>
<li>
<a href="#toc_13">链接</a>
</li>
<li>
<a href="#toc_14">区块引用</a>
</li>
<li>
<a href="#toc_15">行内代码</a>
</li>
<li>
<a href="#toc_16">多行或者一段代码</a>
</li>
<li>
<a href="#toc_17">顺序图或流程图</a>
</li>
<li>
<a href="#toc_18">表格</a>
</li>
<li>
<a href="#toc_19">删除线</a>
</li>
<li>
<a href="#toc_20">分隔线</a>
</li>
<li>
<a href="#toc_21">MathJax</a>
</li>
<li>
<a href="#toc_22">脚注（Footnote）</a>
</li>
<li>
<a href="#toc_23">注释和阅读更多</a>
</li>
<li>
<a href="#toc_24">TOC</a>
</li>
</ul>


<div class="footnotes">
<hr/>
<ol>

<li id="fn1">
<p>这里是脚注信息&nbsp;<a href="#fnref1" rev="footnote">&#8617;</a></p>
</li>

</ol>
</div>

]]></content>
  </entry>
  
</feed>
